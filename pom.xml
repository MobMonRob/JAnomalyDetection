<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    
    <!-- folgende node nur wichtig, wenn das project in das maven central 
         repository verÃ¶ffentlichen werden soll -->
    
    <modelVersion>4.0.0</modelVersion>
    <groupId>de.dhbw.anomalydetection</groupId>
    <artifactId>JAnomalyDetection</artifactId>
    <version>1.0-SNAPSHOT</version>
    <!--packaging>pom</packaging-->
    <packaging>jar</packaging>
    
    <!-- erscheint instantan als projects node name in der IDE -->
    <name>JAnomalyDetection</name>
    <description>Examples of training different data sets</description>

    <!--url>http://maven.apache.org</url-->



    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <maven.compiler.source>1.8</maven.compiler.source>
        <maven.compiler.target>1.8</maven.compiler.target>
        
        
        <!-- Change the nd4j.backend property to nd4j-cuda-7.5-platform or 
             nd4j-cuda-8.0-platform to use CUDA GPUs -->
        <nd4j.backend>nd4j-native-platform</nd4j.backend>
        <!-- <nd4j.backend>nd4j-cuda-8.0-platform</nd4j.backend> -->
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <shadedClassifier>bin</shadedClassifier>


        <java.version>1.8</java.version>
        <nd4j.version>0.9.1</nd4j.version>
        <dl4j.version>0.9.1</dl4j.version>
        <datavec.version>0.9.1</datavec.version>
        <arbiter.version>0.9.1</arbiter.version>
        <rl4j.version>0.9.1</rl4j.version>

        <!-- For Spark examples: change the _1 to _2 to switch between Spark 1 and Spark 2 -->
        <!--dl4j.spark.version>0.9.1_spark_1</dl4j.spark.version>
        <datavec.spark.version>0.9.1_spark_1</datavec.spark.version-->

        <!-- Scala binary version: DL4J's Spark and UI functionality are released with both Scala 2.10 and 2.11 support -->
        <!--scala.binary.version>2.11</scala.binary.version-->

        <guava.version>19.0</guava.version>
        <logback.version>1.1.7</logback.version>
        <jfreechart.version>1.0.13</jfreechart.version>
        <jcommon.version>1.0.23</jcommon.version>
        <maven-compiler-plugin.version>3.6.1</maven-compiler-plugin.version>
        <maven-shade-plugin.version>2.4.3</maven-shade-plugin.version>
        <exec-maven-plugin.version>1.4.0</exec-maven-plugin.version>
        <maven.minimum.version>3.3.1</maven.minimum.version>
        <javafx.version>2.2.3</javafx.version>
        <javafx.runtime.lib.jar>${env.JAVAFX_HOME}/jfxrt.jar</javafx.runtime.lib.jar>
        <aws.sdk.version>1.11.109</aws.sdk.version>
        <jackson.version>2.6.6</jackson.version>
        <!--scala.plugin.version>3.2.2</scala.plugin.version-->
        <jfreechart.version>1.0.13</jfreechart.version>
        
    </properties>
    
    
    <!-- Maven Enforcer: Ensures user has an up to date version of Maven before building -->
    <build>
        <plugins>
            <plugin>
                <artifactId>maven-enforcer-plugin</artifactId>
                <version>1.0.1</version>
                <executions>
                    <execution>
                        <id>enforce-default</id>
                        <goals>
                            <goal>enforce</goal>
                        </goals>
                        <configuration>
                            <rules>
                                <requireMavenVersion>
                                    <version>[${maven.minimum.version},)</version>
                                    <message>********** Minimum Maven Version is ${maven.minimum.version}. Please upgrade Maven before continuing (run "mvn --version" to check). **********</message>
                                </requireMavenVersion>
                            </rules>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <!-- Automated Code Formatting -->
            <plugin>
                <groupId>net.revelc.code.formatter</groupId>
                <artifactId>formatter-maven-plugin</artifactId>
                <version>2.0.0</version>
                <configuration>
                    <configFile>${session.executionRootDirectory}/contrib/formatter.xml</configFile>
                    <directories>
                        <directory>dl4j-examples</directory>
                        <directory>dl4j-spark-examples</directory>
                        <directory>datavec-examples</directory>
                        <directory>dl4j-cuda-specific-examples</directory>
                        <directory>nd4j-examples</directory>
                        <directory>rl4j-examples</directory>
                        <directory>arbiter-examples</directory>
                        <directory>lstm-hdfs</directory>
                    </directories>
                </configuration>
            </plugin>

            <plugin>
                <groupId>com.lewisd</groupId>
                <artifactId>lint-maven-plugin</artifactId>
                <version>0.0.11</version>
                <configuration>
                    <failOnViolation>true</failOnViolation>
                    <onlyRunRules>
                        <rule>DuplicateDep</rule>
                        <rule>RedundantPluginVersion</rule>
                        <rule>VersionProp</rule>
                        <rule>DotVersionProperty</rule>
                    </onlyRunRules>
                </configuration>
                <executions>
                    <execution>
                        <id>pom-lint</id>
                        <phase>validate</phase>
                        <goals>
                            <goal>check</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

        </plugins>


        <pluginManagement>
            <plugins>
                <plugin>
                    <groupId>org.eclipse.m2e</groupId>
                    <artifactId>lifecycle-mapping</artifactId>
                    <version>1.0.0</version>
                    <configuration>
                        <lifecycleMappingMetadata>
                            <pluginExecutions>
                                <pluginExecution>
                                    <pluginExecutionFilter>
                                        <groupId>com.lewisd</groupId>
                                        <artifactId>lint-maven-plugin</artifactId>
                                        <versionRange>[0.0.11,)</versionRange>
                                        <goals>
                                            <goal>check</goal>
                                        </goals>
                                    </pluginExecutionFilter>
                                    <action>
                                        <ignore/>
                                    </action>
                                </pluginExecution>
                            </pluginExecutions>
                        </lifecycleMappingMetadata>
                    </configuration>
                </plugin>
            </plugins>
        </pluginManagement>


    </build>
    <!-- If we wish to add a new dependency, say deeplearning4j-aws, or the spark hook for DL4J. 
         We can simply go to http://search.maven.org/#browse, look up the groupId, artifactId 
         and version we are interested in. Then add those into our dependencies.
    -->
   
    <dependencies>
        
    <!-- deeplearning4j-ui is used for HistogramIterationListener + visualization: 
			see http://deeplearning4j.org/visualization -->
    <dependency>
      <groupId>org.deeplearning4j</groupId>
      <artifactId>deeplearning4j-ui_2.11</artifactId>
      <version>${dl4j.version}</version>
    </dependency>
    
    
    <!-- Core DL4J functionality -->
    <dependency>
      <groupId>org.deeplearning4j</groupId>
      <artifactId>deeplearning4j-core</artifactId>
      <version>${dl4j.version}</version>
    </dependency>
    <dependency>
      <groupId>org.deeplearning4j</groupId>
      <artifactId>deeplearning4j-nlp</artifactId>
      <version>${dl4j.version}</version>
    </dependency>
    
    <!-- ND4J backend. You need one in every DL4J project. Normally define 
         artifactId as either "nd4j-native-platform" or "nd4j-cuda-7.5-platform" -->
    <dependency>
      <groupId>org.nd4j</groupId>
      <artifactId>${nd4j.backend}</artifactId>
      <version>0.9.1</version>
      <!--artifactId>nd4j-x86</artifactId-->
      <!-- das scheint die meistbenutzte aktuelle Version zu sein -->
      <!--version>0.4-rc3.8</version-->
    </dependency>
    <!--dependency>
      <artifactId>canova-nd4j-image</artifactId>
      <groupId>org.nd4j</groupId>
      <version>${canova.version}</version>
    </dependency-->

    <!-- https://mvnrepository.com/artifact/edu.emory.mathcs/JTransforms -->
    <dependency>
        <groupId>edu.emory.mathcs</groupId>
        <artifactId>JTransforms</artifactId>
        <version>2.4</version>
    </dependency>
    
    <dependency>
        <groupId>org.deeplearning4j</groupId>
        <artifactId>rl4j-examples</artifactId>
        <version>0.9.1</version>
        <type>jar</type>
    </dependency>
    <!--dependency>
        <groupId>org.datavec</groupId>
        <artifactId>datavec-api</artifactId>
        <version>0.9.2-SNAPSHOT</version>
        <type>jar</type>
    </dependency-->
    <dependency>
        <groupId>org.deeplearning4j</groupId>
        <artifactId>deeplearning4j-play_2.11</artifactId>
        <version>0.9.1</version>
        <type>jar</type>
    </dependency>
    
    <!-- plot -->
    <dependency>
            <groupId>jfree</groupId>
            <artifactId>jfreechart</artifactId>
            <version>${jfreechart.version}</version>
            <type>jar</type>
    </dependency>
    <dependency>
            <groupId>org.jfree</groupId>
            <artifactId>jcommon</artifactId>
            <version>${jcommon.version}</version>
            <type>jar</type>
    </dependency>
        <dependency>
            <groupId>org.deeplearning4j</groupId>
            <artifactId>deeplearning4j-nn</artifactId>
            <version>0.9.1</version>
            <type>jar</type>
        </dependency>
    </dependencies>
    
</project>